version: "3"

services:
  backend:
    container_name: infisical-backend
    restart: unless-stopped
    depends_on:

    image: infisical/infisical:latest-postgres
    platform: linux/amd64
    pull_policy: always
    env_file: .env
    expose:
      - "8080"
    environment:
      - NODE_ENV=production
    networks:
      - infisical
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.infisical.rule=Host(`your-domain.com`)"
      - "traefik.http.routers.infisical.entrypoints=websecure"
      - "traefik.http.routers.infisical.tls.certresolver=letsencrypt"
      - "traefik.http.services.infisical.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik"

  redis:
    image: redis
    container_name: infisical-dev-redis
    env_file: .env
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    expose:
      - "6379"
    networks:
      - infisical
    volumes:
      - redis_data:/data

  # db:
  #   container_name: infisical-db
  #   image: postgres:14-alpine
  #   restart: always
  #   env_file: .env
  #   volumes:
  #     - pg_data:/var/lib/postgresql/data
  #   networks:
  #     - infisical
  #   healthcheck:
  #     test: "pg_isready --username=${POSTGRES_USER} && psql --username=${POSTGRES_USER} --list"
  #     interval: 5s
  #     timeout: 10s
  #     retries: 10

volumes:
  redis_data:
    driver: local

networks:
  infisical:
    driver: bridge
  traefik:
    external: true
